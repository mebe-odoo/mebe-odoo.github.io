(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{273:function(e,t,a){"use strict";a.r(t);var r=a(13),n=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"realty-management-part-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#realty-management-part-1"}},[e._v("#")]),e._v(" Realty Management - Part 1")]),e._v(" "),t("p",[t("RouterLink",{attrs:{to:"/tco/exercises/realty_management_2.html"}},[e._v("Realty Management - Part 2")])],1),e._v(" "),t("p",[e._v("A Realty management agency has approached your company to implement a property management solution using Odoo. Their requirements are as follows:")]),e._v(" "),t("h2",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),t("p",[e._v("As in, the buildings, apartments and houses they need to be able to manage. Properties have the following required attributes:")]),e._v(" "),t("ul",[t("li",[e._v("Name: A name for the property (Required)")]),e._v(" "),t("li",[e._v("Consturction Date: The date on which the property was constructed (Required)")]),e._v(" "),t("li",[e._v("Rent: The base rent price for the property (Required)")]),e._v(" "),t("li",[e._v("Rooms: A list of rooms available in the property, including kitchens, bathrooms and storage rooms (Required)")]),e._v(" "),t("li",[e._v("Parking Spots: The number of parking spots the property has access to (Required)")]),e._v(" "),t("li",[e._v("Surface: The total surface of the property, displayed in meters squared (Required)")]),e._v(" "),t("li",[e._v("Furnishing: Whether or not the property is furnished (Required)")]),e._v(" "),t("li",[e._v("Address: A reference to the property's address, including: Street, City, Zip Code, State, Country (Required)")]),e._v(" "),t("li",[e._v("Available for Rent: Wheter the property is available for rent (Required)")]),e._v(" "),t("li",[e._v("Is Rented: Whether the property is currently rented. Computed using the following logic: Is there any tenancy active during the current time frame ? (Required)")])]),e._v(" "),t("h2",{attrs:{id:"tenants"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tenants"}},[e._v("#")]),e._v(" Tenants")]),e._v(" "),t("p",[e._v("As in, the contacts that occupy the property")]),e._v(" "),t("ul",[t("li",[e._v("Name: name of the tenanct (Required)")]),e._v(" "),t("li",[e._v("Phone: Phone number of the tenant (Required)")]),e._v(" "),t("li",[e._v("Email: email of the tenant (Required)")]),e._v(" "),t("li",[e._v("Address: address of the tenant, including: Street, City, Zip Code, State, Country (Required)")]),e._v(" "),t("li",[e._v("Date of birth: date on which the tenant was born (Optional)")]),e._v(" "),t("li",[e._v("Place of birth: place in which the tenant was born (Optional)")]),e._v(" "),t("li",[e._v("Nationality: nationality of the tenant (Optional)")])]),e._v(" "),t("h2",{attrs:{id:"tenancies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tenancies"}},[e._v("#")]),e._v(" Tenancies")]),e._v(" "),t("p",[e._v("As in, the contracts that bind a tenant and a property over a specified period of time. Tenancies have the following attributes:")]),e._v(" "),t("ul",[t("li",[e._v("Property: A reference to the property rented (Required)")]),e._v(" "),t("li",[e._v("Tenant: A reference to the person renting the property (Required)")]),e._v(" "),t("li",[e._v("Contract Name: A computed value that is a combination of noth the property name and the tenant's name")]),e._v(" "),t("li",[e._v("Start Date: The date on which the contract starts (Required)")]),e._v(" "),t("li",[e._v("Date End: The date on which the contract ends (Optional)")]),e._v(" "),t("li",[e._v("State: Whether the tenancy is in draft, active, cancelled or terminated (Required). By default should be draft.")]),e._v(" "),t("li",[e._v("Tenancy Lines: Reference to the lines of the contract, with the following required attributes:")])]),e._v(" "),t("h2",{attrs:{id:"tenancy-lines"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tenancy-lines"}},[e._v("#")]),e._v(" Tenancy Lines")]),e._v(" "),t("p",[e._v("As in, the lines of the contracts binding tenants to properties.")]),e._v(" "),t("ul",[t("li",[e._v("Product: The product to which the line is linked to. typically Rent or Bills (Required)")]),e._v(" "),t("li",[e._v("Quantity: The number of products sold (Required)")]),e._v(" "),t("li",[e._v("Price: The unit price of each product (Required)")]),e._v(" "),t("li",[e._v("Total Amount: computed value of quantity * price (Computed)")])]),e._v(" "),t("h2",{attrs:{id:"notes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[e._v("#")]),e._v(" Notes")]),e._v(" "),t("p",[e._v("For the sake of this exercise let's assume the following:")]),e._v(" "),t("ul",[t("li",[e._v("Properties, Tenancies and Tenants are new custom models in the system. Create the appropriate models, views ans access rights.")]),e._v(" "),t("li",[e._v("Tenants are res.partner records, where only additional fields need to be added. Once those fields are added to the python model, also add them to the existing partner form view")]),e._v(" "),t("li",[e._v("Tenancies are created in draft mode by default. They should have a button that changes their state to 'Active' that can only be used if the Start Date and End Date are both defined correctly (Date End > Date Start)")]),e._v(" "),t("li",[e._v("For a tenancy to be terminated, we need to create a new scheduled action that will check every day whether a tenancy has reached its end date or not. For this, we need to create a new ir.cron record.")]),e._v(" "),t("li",[e._v("Make the new views & actions accessible via a new menu item that should read: Realty Management")])])])}),[],!1,null,null,null);t.default=n.exports}}]);